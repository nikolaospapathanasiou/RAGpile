services:
  backend:
    build: ./backend
    ports:
      - "5678:5678"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - neo4j
    stop_grace_period: 4s
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_TASKS_USER=postgres
      - POSTGRES_TASKS_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_SCHEDULER_DB=scheduler
      - POSTGRES_CHECKPOINTER_DB=checkpointer
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_SEARCH_API_KEY=${GOOGLE_SEARCH_API_KEY}
      - GOOGLE_SEARCH_ENGINE_ID=${GOOGLE_SEARCH_ENGINE_ID}
      - BASE_URL=http://127.0.0.1
      - JWT_SECRET=secret
      - TELEGRAM_APPLICATION_TOKEN=${TELEGRAM_APPLICATION_TOKEN}
      - ENABLE_DEBUGPY=1
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=ragpile123
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=PathPrefix(`/ragpile/api`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
  frontend:
    build: ./frontend
    volumes:
      - ./frontend/src:/app/src
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/ragpile`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    ports:
      - 24678:24678
  db:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/init-postgres.sh
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: u@d.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmindata:/var/lib/pgadmin
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  neo4j:
    image: neo4j:5.25-community
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/ragpile123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_data:/data
    stop_grace_period: 4s
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    environment:
      ENABLE_OPENAI_API: True
      OPENAI_API_BASE_URL: http://backend:8000/ragpile/api
      OPENAI_API_KEY: not_used
      ENABLE_OLLAMA_API: False
      DATABASE_URL: postgresql://postgres:postgres@db:5432/openwebui
      ENABLE_OAUTH_SIGNUP: True
      ENABLE_LOGIN_FORM: False
      OAUTH_MERGE_ACCOUNTS_BY_EMAIL: True
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      WEBHOOK_URL: http://backend:8000/webhook
      WEBUI_SECRET_KEY: secret
    volumes:
      - open-webui:/app/backend/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=PathPrefix(`/`)"
      - "traefik.http.routers.openwebui.entrypoints=web"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
volumes:
  open-webui: {}
  pgdata: {}
  pgadmindata: {}
  neo4j_data: {}
